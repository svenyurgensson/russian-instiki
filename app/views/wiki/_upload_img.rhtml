<div id="imgur">
  <div>
    Перетащить картинку для загрузки
    <br/>
    <hr/>
    <button onclick="document.querySelector('input#loader').click()">Или нажми</button>
  </div>
  <img id="preview"></img>
  <input type="file" id="loader" onchange="FileUpload(this.files[0])"/>
  <input type='text' id="result-link" value="" onclick="this.select();" />
</div>


<% if Rails.configuration.action_controller.session[:imgurKey] %>

<script type="text/javascript">
  window.ondragover = function(e) {e.preventDefault()}
  window.ondrop = function(e) {e.preventDefault(); FileUpload(e.dataTransfer.files[0]); }

  function FileUpload(file) {
        /* Is the file an image? */
        if (!file || !file.type.match(/image.*/)) return;
        /* It is! */
        document.body.className = "uploading";
        /* Lets build a FormData object*/
        var fd = new FormData(); // I wrote about it: https://hacks.mozilla.org/2011/01/how-to-develop-a-html5-image-uploader/
        fd.append("image", file); // Append the file
        var xhr = new XMLHttpRequest(); // Create the XHR (Cross-Domain XHR FTW!!!) Thank you sooooo much imgur.com
        xhr.open("POST", "https://api.imgur.com/3/image.json"); // Boooom!
        xhr.onload = function() {
            // Big win!
            var json = JSON.parse(xhr.responseText);
            console.log(json);
            document.querySelector("#preview").src = json.data.link;
            var wiki_img = "![описание картинки](" + json.data.link + ")";
            document.querySelector("#result-link").value  = wiki_img;
            insertAtCaret('content', wiki_img);
            document.body.className = "uploaded";
        }

        xhr.setRequestHeader('Authorization', 'Client-ID <%= Rails.configuration.action_controller.session[:imgurKey]%>'); // Get your own key http://api.imgur.com/

        // Ok, I don't handle the errors. An exercise for the reader.
        /* And now, we send the formdata */
        xhr.send(fd);
    }

</script>
<% end %>
